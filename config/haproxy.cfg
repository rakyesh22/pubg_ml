#---------------------------------------------------------------------
# Example configuration for a possible web application.  See the
# full configuration options online.
#
#   http://haproxy.1wt.eu/download/1.4/doc/configuration.txt
#
#---------------------------------------------------------------------

#---------------------------------------------------------------------
# Global settings
#---------------------------------------------------------------------
global
    # to have these messages end up in /var/log/haproxy.log you will
    # need to:
    #
    # 1) configure syslog to accept network log events.  This is done
    #    by adding the '-r' option to the SYSLOGD_OPTIONS in
    #    /etc/sysconfig/syslog
    #
    # 2) configure local2 events to go to the /var/log/haproxy.log
    #   file. A line like the following can be added to
    #   /etc/sysconfig/syslog
    #
    #    local2.*                       /var/log/haproxy.log
    #
    log         127.0.0.1 local2

    chroot      /var/lib/haproxy
    pidfile     /var/run/haproxy.pid
    maxconn     4000
    user        haproxy
    group       haproxy
    daemon

    # turn on stats unix socket
    stats socket /var/lib/haproxy/stats

#---------------------------------------------------------------------
# common defaults that all the 'listen' and 'backend' sections will
# use if not designated in their block
#---------------------------------------------------------------------
defaults
    mode                    http
    log                     global
    option                  httplog
    option                  dontlognull
    option http-server-close
    option forwardfor       except 127.0.0.0/8
    option                  redispatch
    retries                 3
    timeout http-request    10s
    timeout queue           1m
    timeout connect         10s
    timeout client          1m
    timeout server          1m
    timeout http-keep-alive 10s
    timeout check           10s
    maxconn                 3000

#---------------------------------------------------------------------
# main frontend which proxys to the backends, handle all HTTP traffic
#---------------------------------------------------------------------
frontend  main *:80
    acl url_pubg_prediction       path_beg       -i /pubgml/prediction
    acl url_pubgsh_api            path_beg       -i /graphql
    
    use_backend pubg_prediction   if url_pubg_prediction
    use_backend pubgsh_api	  if url_pubgsh_api

    default_backend             pubgsh_client

#---------------------------------------------------------------------
# pubg.sh api
#---------------------------------------------------------------------
backend pubgsh_api
    balance      roundrobin
    server       pubgsh_api1 127.0.0.1:8080 check


#---------------------------------------------------------------------
# pubg prediction server backend
#---------------------------------------------------------------------
backend pubg_prediction
    balance     roundrobin
    server      pubg_prediction1 127.0.0.1:9000 check

#---------------------------------------------------------------------
# pubg.sh client
#---------------------------------------------------------------------
backend pubgsh_client
    balance     roundrobin
    server  	pubgsh_client1 127.0.0.1:3000 check

